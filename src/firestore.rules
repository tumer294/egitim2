rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    match /users/{userId} {
      // LIST: Admins can list all users for the admin panel.
      allow list: if isAdmin(request.auth.uid);
      // READ: A user can read their own profile, or an admin can read any profile.
      allow read: if request.auth.uid == userId || isAdmin(request.auth.uid);
      // WRITE: A user can update their own profile, or an admin can update any profile (to change roles).
      allow write: if request.auth.uid == userId || isAdmin(request.auth.uid);
      // CREATE: Any authenticated user can create their own user document.
      allow create: if request.auth.uid != null;
    }

    // Users can manage their own subcollections fully.
    match /users/{userId}/{subcollection}/{docId} {
      allow read, write, create, delete: if request.auth.uid == userId;
    }
    
    // Forum is public to read for any authenticated user.
    match /forum/{postId} {
      allow read: if request.auth != null;
      // Write/update/delete only by the author or an admin.
      allow write, update, delete: if request.auth.uid == resource.data.author.uid || isAdmin(request.auth.uid);
      
      // Replies subcollection
      match /replies/{replyId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null; // Any authenticated user can reply
        allow update, delete: if request.auth.uid == resource.data.author.uid || isAdmin(request.auth.uid);

        // Comments sub-subcollection
        match /comments/{commentId} {
           allow read: if request.auth != null;
           allow create: if request.auth != null; // Any authenticated user can comment
           allow update, delete: if request.auth.uid == resource.data.author.uid || isAdmin(request.auth.uid);
        }
      }
    }
    
    // Notifications are public to read for any authenticated user.
    match /notifications/{notificationId} {
        allow read: if request.auth != null;
        // Only admins can create/write/delete notifications.
        allow write, create, delete: if isAdmin(request.auth.uid);
    }
  }
}
